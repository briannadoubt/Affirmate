name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  client:
    name: Client tests (${{ matrix.platform }})
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: iOS
            destination: "platform=iOS Simulator,OS=latest,name=iPhone 15"
            scheme: Affirmate
          - platform: macOS
            destination: "platform=macOS"
            scheme: Affirmate
          - platform: visionOS
            destination: "platform=visionOS Simulator,OS=latest,name=Apple Vision Pro"
            scheme: Affirmate
          - platform: tvOS
            destination: "platform=tvOS Simulator,OS=latest,name=Apple TV 4K (3rd generation)"
            scheme: Affirmate
          - platform: watchOS
            destination: "platform=watchOS Simulator,OS=latest,name=Apple Watch Series 9 (45mm)"
            scheme: AffirmateWatch
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Build and test
        run: |
          set -o pipefail
          xcodebuild test \
            -project Affirmate.xcodeproj \
            -scheme "${{ matrix.scheme }}" \
            -destination "${{ matrix.destination }}" \
            -skipPackagePluginValidation \
            -disableAutomaticPackageResolution

  server:
    name: Server tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: '5.10'

      - name: Run server tests
        working-directory: AffirmateServer
        run: swift test

  integration:
    name: Integration tests
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Start server stack
        working-directory: AffirmateServer
        run: |
          docker compose up -d db
          until docker compose exec db pg_isready -U vapor_username >/dev/null 2>&1; do sleep 2; done
          docker compose run --rm migrate
          docker compose up -d app
          sleep 15

      - name: Run integration tests
        env:
          AFFIRMATE_INTEGRATION_TESTS: '1'
        run: |
          set -o pipefail
          xcodebuild test \
            -project Affirmate.xcodeproj \
            -scheme Affirmate \
            -destination 'platform=macOS' \
            -skipPackagePluginValidation \
            -disableAutomaticPackageResolution

      - name: Shutdown server stack
        if: always()
        working-directory: AffirmateServer
        run: docker compose down -v
